generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              String    @id @default(cuid())
  username        String    @unique
  provider_id     String    @unique
  hashed_password String?
  organizationId  Int?      @map("organization_id")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime? @updatedAt @map("updated_at")

  session      Session[]
  organization Organization? @relation(fields: [organizationId], references: [id])

  @@index([organizationId])
  @@map("users")
}

model Session {
  id           String @id @unique
  user_id      String
  expires      BigInt
  idle_expires BigInt

  user User @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("sessions")
}

model Organization {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  address   String?
  phone     String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  users    User[]
  branches BranchOffice[]

  @@map("organizations")
}

model BranchOffice {
  id             Int       @id @default(autoincrement())
  name           String    @unique
  organizationId Int       @map("organization_id")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime? @updatedAt @map("updated_at")

  zones        Zone[]
  organization Organization @relation(fields: [organizationId], references: [id])

  @@index([organizationId])
  @@map("branches")
}

model Zone {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  branchId  Int       @map("branch_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  branch  BranchOffice @relation(fields: [branchId], references: [id])
  devices Device[]

  @@index([branchId])
  @@map("zones")
}

model Device {
  id        String    @id @default(cuid())
  name      String    @unique
  zoneId    Int       @map("zone_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  zone Zone @relation(fields: [zoneId], references: [id])

  @@index([zoneId])
  @@map("devices")
}

model Energy {
  id        BigInt   @id @default(autoincrement()) @db.BigInt
  timestamp DateTime
  metadata  Json
  data      Json

  @@map("energy")
}
